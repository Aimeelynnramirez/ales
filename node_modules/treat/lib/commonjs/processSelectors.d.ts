import { Theme } from 'treat/theme';
import { Style, ThemeRef, TreatTheme } from './types';
export declare const isThemedSelector: (selector: string) => boolean;
export declare const addLocalClassRef: (classRef: string) => number;
export declare const interpolateSelector: (selector: string, themeRef?: string | undefined) => string;
export declare const combinedThemeSelector: (selector: string, themes: TreatTheme<any>[]) => string;
interface ProcessSelectorsParams {
    style: Style;
    themes: Array<TreatTheme<Theme>>;
    themeRef?: ThemeRef;
}
export declare const processSelectors: ({ style, themeRef, themes, }: ProcessSelectorsParams) => void;
export {};
